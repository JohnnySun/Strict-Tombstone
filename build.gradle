buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.0-beta3'
    }
}

apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion '25.0.0'

    def Properties versionProps = new Properties()
    def versionPropsFile = file('version.properties')
    if(versionPropsFile.exists())
        versionProps.load(new FileInputStream(versionPropsFile))
    def code = (versionProps['VERSION_CODE'] ?: "0").toInteger() + 1
    versionProps['VERSION_CODE'] = code.toString()
    versionProps.store(versionPropsFile.newWriter(), null)


    defaultConfig {
        versionCode code
        versionName "1.0"
        buildConfigField "boolean", "RELEASE", "false"
        buildConfigField "boolean", "DONATE", "false"
        buildConfigField "String", "DONATE_ALIPAY", "null"
        buildConfigField "String", "DONATE_PAYPAL", "null"
        buildConfigField "String", "EMAIL", "null"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
        androidTest.setRoot('tests')
    }

    if (new File("ant.properties").exists()) {
        Properties properties = new Properties()
        properties.load(new FileInputStream(file("ant.properties")))

        signingConfigs {
            release {
                storeFile file(properties['key.store'])
                storePassword properties['key.store.password']
                keyAlias properties['key.alias']
                keyPassword properties['key.alias.password']
            }
        }

        buildTypes {
            release {
                signingConfig signingConfigs.release
            }
            debug {
                signingConfig signingConfigs.release
            }
        }
    }
}

repositories {
    jcenter()
}

dependencies {
    provided fileTree(include: ['*.jar'], dir: 'lib')
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile files('lib/AndroidHiddenAPI.jar')
    //compile files('lib/XposedBridgeApi-30.jar')
    compile files('libs/android-support-v4.jar')

    provided 'de.robv.android.xposed:api:82'
    //如果需要引入文档，方便查看的话
    provided 'de.robv.android.xposed:api:82:sources'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
    options.compilerArgs << '-Xbootclasspath/p:' + fileTree(dir: 'lib', include: ['*.jar']).asPath
}
